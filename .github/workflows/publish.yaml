name: Debug
on:
  workflow_dispatch:
  workflow_run:
    workflows: 
      - 'Tests'
    types: 
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: print context
        env:
          GITHUB_CONTEXT:  ${{ toJson(github) }} 
          VARS_CONTEXT:  ${{ toJson(vars) }} 
        run: |
          echo "GITHUB_CONTEXT is $GITHUB_CONTEXT"
          echo "VARS_CONTEXT is $VARS_CONTEXT"

  check-upstream-jobs:
    runs-on: ubuntu-latest
    outputs:
      tests_status: ${{ steps.check-tests-status.outputs.jobs_status }}
    steps:
      - name: Check upstream job statuses
        id: check-tests-status
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            if (context.eventName === 'workflow_dispatch') {
              console.log('‚úÖ Workflow manually dispatched. Skipping tests jobs check. ‚úÖ');
              core.setOutput('jobs_status', 'success');
              return;
            }

            const { data } = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id
            });

            // List of job names to check
            const jobsToCheck = [
              'Backend tests', 
              'UI tests'
            ];
            
            // Find the jobs we want to check
            const relevantJobs = data.jobs.filter(job => jobsToCheck.includes(job.name));
            
            // Check if any job failed
            const failedJobs = relevantJobs.filter(job => job.conclusion === 'failure');
            
            // Check if all jobs were skipped
            const allSkippedJobs = relevantJobs.every(job => job.conclusion === 'skipped');
            
            if (failedJobs.length > 0) {
              console.log('üö® Workflow Check Failed üö®');
              console.log('The following jobs failed:');
              failedJobs.forEach(job => {
                console.log(`‚ùå ${job.name}`);
              });
              core.setOutput('jobs_status', 'failure');
            } else if (allSkippedJobs) {
              console.log('‚è© All specified jobs were skipped ‚è©');
              core.setOutput('jobs_status', 'skipped');
            } else {
              console.log('‚úÖ All specified jobs passed successfully ‚úÖ');
              core.setOutput('jobs_status', 'success');
            }

  publish:
    runs-on: ubuntu-latest
    needs: [check-upstream-jobs]
    if: ${{ needs.check-upstream-jobs.outputs.tests_status == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Publish
        run: |
          echo "Publishing"
          sleep 10
