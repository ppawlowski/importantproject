name: set date
on:
  issues:
    types: [opened, edited]

jobs:
  set-date:
    runs-on: ubuntu-latest
    steps:
      - name: debug
        run: cat "$GITHUB_EVENT_PATH" 
      - name: Check if issue is part of a project and has Start Date set
        run: |
          ISSUE_NUMBER=$(jq --raw-output .issue.number "$GITHUB_EVENT_PATH")
          REPO_OWNER=$(jq --raw-output .repository.owner.login "$GITHUB_EVENT_PATH")
          REPO_NAME=$(jq --raw-output .repository.name "$GITHUB_EVENT_PATH")
          QUERY=$(printf 'query { repository(owner: "%s", name: "%s") { issue(number: %s) { projectCards(first: 100) { nodes { project { name } content { ... on Issue { body } } } } } } }' "$REPO_OWNER" "$REPO_NAME" "$ISSUE_NUMBER")
          PROJECT_CARD=$(gh api graphql -f query="$QUERY" | jq '.data.repository.issue.projectCards.nodes[].project.name')
          if [[ $PROJECT_CARD != *"Development"* ]]; then
            echo "Issue is not part of the Development project"
          else
            echo "Issue is part of the Development project"
            START_DATE=$(gh api graphql -f query="$QUERY" | jq '.data.repository.issue.projectCards.nodes[].content.body' | grep -oP 'Start Date: \K.*')
            if [ -z "$START_DATE" ]; then
              echo "Start Date field is not set"
              exit 1
            else
              echo "Start Date field is set"
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
